@page "/categories"
@using CRUDByBlazorTemplate.Models
@using CRUDByBlazorTemplate.Services
@using CRUDByBlazorTemplate.Response
@using CRUDByBlazorTemplate.Dtos
@using CRUDByBlazorTemplate.Components.UI.DataTable
@inject ICategoryService _categoryService
@attribute [StreamRendering]
@rendermode InteractiveServer

<PageTitle>Categorias</PageTitle>

<MudContainer 
Class ="gap-12 d-flex flex-column justify-content-around h-auto"
MaxWidth="MaxWidth.Large"
>
    
    <MudText Typo="Typo.h4">Listagem de categorias</MudText>
        
    <div class="gap-3 d-flex flex-column justify-content-around h-auto">

        <div class="d-flex flex-row justify-content-end">
            <MudButton Href="/categories/create"
                       Variant="Variant.Filled"
                       Class=" max-w-25"
                       Target="_blank"
                       DropShadow="true"
                       EndIcon="@Icons.Material.Sharp.Add"
                       Color="Color.Primary">
                Nova categoria
            </MudButton>
        </div>
       


        <DataTable T=CategoryDto
                   DataTableVM="@(new ViewModel<CategoryDto>(Headers, Categories, Total, Take, Page, Search, Response))"
                   GetData="GetCategories" />
    </div>
    

</MudContainer>

@code
{

    private List<CategoryDto>? Categories = new List<CategoryDto>();

    private List<(string Header, string PropName)> Headers = new List<(string Header, string PropName)>
    {
        ("Título", "Title"),
        ("Descrição", "Description"),
        ("Criado em", "CreatedAt"),
        ("Ultima atualização", "UpdatedAt")
    };


    private int Total;

    private int Take = 10;

    private int Page = 1;

    private string? Search;

    private CategoryResponse Response;

    public async Task<GridData<CategoryDto>> GetCategories(int Page=1)
    {

        var res = await _categoryService.Get(Take, Page * Take, Search);

        Response = (CategoryResponse)res.Content;

        Categories = Response.CategoryDtos;

        Total = Response.Total;

        return new GridData<CategoryDto>
            {
                Items = Categories,
                TotalItems = Total
            };
    }

}